# docker-compose.yml

services:
  backend:
    build: 
      context: .
      dockerfile: Dockerfile.local
    container_name: osp-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    # This now waits for the db service to be 'healthy'
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped

  db:
    image: postgis/postgis:15-3.4
    container_name: osp-db
    environment:
      POSTGRES_USER: osp_user
      POSTGRES_PASSWORD: osp_password
      POSTGRES_DB: osp_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Add this healthcheck block
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U osp_user -d osp_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  minio:
    image: minio/minio
    container_name: osp-minio
    ports:
      - "9000:9000"  # API Port
      - "9001:9001"  # Console/UI Port
    volumes:
      - minio_data:/data
    environment:
      # These credentials are for the MinIO server itself
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    healthcheck:
      test:
        [
          "CMD",
          "mc",
          "ready",
          "local"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: osp-cloudflared
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    restart: unless-stopped
    depends_on:
      - backend

volumes:
  postgres_data:
  minio_data:
